-- 기존 테이블이 있으면 먼저 삭제
DROP TABLE notifications CASCADE CONSTRAINTS;

-- 알림 테이블 생성
CREATE TABLE notifications (
                               id              NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- 알림 PK
                               recipient_id    NUMBER(19) NOT NULL,                                     -- 수신자 ID
                               sender_id       NUMBER(19),                                              -- 발신자 ID(없을 수도 있음)
                               type            VARCHAR2(50) NOT NULL,                                   -- 알림 종류 코드
                               entity_type     VARCHAR2(50) NOT NULL,                                   -- 관련 엔티티 종류
                               entity_id       NUMBER(19),                                              -- 관련 엔티티 PK
                               message_title   VARCHAR2(255),                                           -- 알림 제목
                               message_body    CLOB,                                                    -- 알림 본문
                               link_url        VARCHAR2(1024),                                          -- 알림 클릭 시 이동 경로
                               status          VARCHAR2(20) DEFAULT 'NEW' NOT NULL,                     -- 알림 상태 (NEW, READ, ARCHIVED)
                               created_at      TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,                 -- 생성 시각
                               idempotency_key VARCHAR2(100) NOT NULL UNIQUE,                           -- 중복 방지 키 (항상 값 존재 + 고유)
                               meta_json       CLOB,                                                    -- 부가 데이터(JSON)
                               CONSTRAINT fk_notif_recipient FOREIGN KEY (recipient_id) REFERENCES users(id) ON DELETE CASCADE, -- 수신자 삭제 시 알림도 삭제
                               CONSTRAINT fk_notif_sender    FOREIGN KEY (sender_id) REFERENCES users(id) ON DELETE SET NULL,  -- 발신자 삭제 시 NULL 처리
                               CONSTRAINT ck_notif_status CHECK (status IN ('NEW','READ','ARCHIVED'))   -- 상태 값 제한
);

-- 수신자별 최신 알림 조회 성능 최적화를 위한 인덱스
CREATE INDEX ix_notif_recipient_created
    ON notifications(recipient_id, created_at DESC);




-- 1) 알림: (내 알림 + 상태 + 최신순) 빨리 찾기
CREATE INDEX ix_notif_recipient_status_created
    ON notifications (recipient_id, status, created_at DESC);

-- 2) 일정: (내 일정 + 시작시각) 빨리 찾기
CREATE INDEX ix_sched_user_start ON schedules (user_id, start_time);

-- 3) 일정: (내 일정 + 끝시각)도 경우에 따라 유리해서 하나 더
CREATE INDEX ix_sched_user_end   ON schedules (user_id, end_time);


BEGIN
    DBMS_STATS.GATHER_INDEX_STATS(USER, 'IX_NOTIF_RECIPIENT_STATUS_CREATED');
    DBMS_STATS.GATHER_INDEX_STATS(USER, 'IX_SCHED_USER_START');
    DBMS_STATS.GATHER_INDEX_STATS(USER, 'IX_SCHED_USER_END');
END;