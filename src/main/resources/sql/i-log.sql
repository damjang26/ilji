CREATE TABLE i_log (
    -- 기본 키, 1부터 자동으로 1씩 증가하는 숫자 (number(19)와 동일)
    id NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

    -- ✅ [수정] 작성자 프로필 ID, user_profile 테이블의 user_id를 참조하는 외래 키
    user_profile_id NUMBER(19) NOT NULL,

    -- ✅ [수정] 일기 날짜, 엔티티의 'logDate' 필드와 매핑되는 'log_date'로 이름 변경
    log_date DATE NOT NULL,

    -- 일기 본문
    content VARCHAR2(3000 CHAR) NOT NULL,

    -- 대표 이미지 URL, 사진이 없을 수도 있으므로 NULL 허용
    -- 여러 이미지를 JSON 배열 문자열로 저장하므로 2048 이상으로 넉넉하게 설정
    img_url VARCHAR2(4000 CHAR),

    -- 생성 시각, 레코드 생성 시 자동으로 현재 시간이 기록됨
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,

    -- 좋아요 수, 기본값 0
    like_count NUMBER DEFAULT 0 NOT NULL,

    -- 댓글 수, 기본값 0
    comment_count NUMBER DEFAULT 0 NOT NULL,

    -- 공개 여부
    visibility NUMBER(1) DEFAULT 0 NOT NULL,

    -- 친구 태그 (user_id 나열)
    friend_tags VARCHAR2(2000),

    -- 일반 태그 / 해시태그
    tags VARCHAR2(1000),

    -- ✅ [수정] 외래 키 제약 조건: user_profile 테이블의 user_id를 참조하도록 변경
    CONSTRAINT fk_ilog_user_profile FOREIGN KEY (user_profile_id) REFERENCES user_profile(user_id) ON DELETE CASCADE,

    -- ✅ [수정] 유니크 제약 조건: 컬럼명 변경에 맞춰 수정
    CONSTRAINT uq_ilog_user_profile_date UNIQUE (user_profile_id, log_date)
);

DROP TABLE I_LOG;

INSERT INTO i_log (user_profile_id, log_date, content, visibility) VALUES (48, SYSDATE, '테스트 일지입니다.', 0);

SELECT * FROM I_LOG;




