CREATE TABLE schedules (
    -- 기본 정보
    -- Oracle 12c+ 자동 증가 ID. NUMBER(19)는 Java의 Long 타입과 호환됩니다.
                           id NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           user_id NUMBER(19) NOT NULL,                   -- 일정을 소유한 사용자의 ID (users 테이블과 연결)
                           calendar_id NUMBER(19) NOT NULL,               -- 캘린더 ID

    -- 일정 내용
                           title VARCHAR2(255) NOT NULL,                  -- 일정 제목
                           location VARCHAR2(255),                        -- 장소
                           tags VARCHAR2(500),                            -- 태그 (콤마로 구분된 문자열 등)
    -- Oracle의 대용량 텍스트 타입은 CLOB입니다.
                           description CLOB,

    -- 시간 정보
                           start_time TIMESTAMP NOT NULL,                 -- 시작 시간 (날짜 + 시간)
                           end_time TIMESTAMP NOT NULL,                   -- 종료 시간 (날짜 + 시간)
    -- Oracle에는 BOOLEAN 타입이 없으므로 NUMBER(1)과 CHECK 제약조건을 사용합니다. (0: false, 1: true)
                           is_all_day NUMBER(1) DEFAULT 0 NOT NULL,

    -- 반복 정보 (가장 중요)
                           rrule VARCHAR2(255),                           -- 반복 규칙 (iCalendar 표준 RRULE 형식)

    -- 메타데이터
    -- Oracle은 ON UPDATE를 지원하지 않음. 이 로직은 JPA/Application에서 처리해야 합니다.
                           created_at TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
                           updated_at TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,

    -- 외래 키 제약 조건
                           CONSTRAINT fk_schedules_user_id FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    -- is_all_day 컬럼이 0 또는 1 값만 갖도록 강제합니다.
                           CONSTRAINT chk_schedules_is_all_day CHECK (is_all_day IN (0, 1))
);


-- 테스트용 데이터 INSERT (3개)
-- id 컬럼은 GENERATED AS IDENTITY로 설정되어 있으므로, 값을 직접 넣지 않아도 자동으로 생성됩니다.
-- user_id는 테스트를 위해 임의로 1로 가정합니다.

-- 1. 하루 종일 일정 (개인 캘린더, calendar_id = 1)
INSERT INTO schedules (user_id, calendar_id, title, location, tags, description, start_time, end_time, is_all_day, rrule, created_at, updated_at)
VALUES (
           1,
           1, -- 캘린더 ID
           '전사 워크샵',
           '제주도',
           '워크샵,회사',
           '팀 빌딩 및 하반기 전략 공유',
           TO_TIMESTAMP('2025-08-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
           TO_TIMESTAMP('2025-08-01 23:59:59', 'YYYY-MM-DD HH24:MI:SS'),
           1, -- is_all_day = true
           NULL,
           SYSTIMESTAMP,
           SYSTIMESTAMP
       );

-- 2. 특정 시간 일정 (업무 캘린더, calendar_id = 2)
INSERT INTO schedules (user_id, calendar_id, title, location, tags, description, start_time, end_time, is_all_day, rrule, created_at, updated_at)
VALUES (
           1,
           2, -- 캘린더 ID
           '프로젝트 A 주간 회의',
           '3층 회의실 A',
           '프로젝트A,주간회의',
           '지난 주 진행상황 및 다음 주 계획 논의',
           TO_TIMESTAMP('2025-08-04 10:00:00', 'YYYY-MM-DD HH24:MI:SS'),
           TO_TIMESTAMP('2025-08-04 11:30:00', 'YYYY-MM-DD HH24:MI:SS'),
           0, -- is_all_day = false
           NULL,
           SYSTIMESTAMP,
           SYSTIMESTAMP
       );

-- 3. 반복 일정 (업무 캘린더, calendar_id = 2)
INSERT INTO schedules (user_id, calendar_id, title, location, tags, description, start_time, end_time, is_all_day, rrule, created_at, updated_at)
VALUES (
           1,
           2, -- 캘린더 ID
           '데일리 스크럼',
           '온라인 (Zoom)',
           '스크럼',
           '어제 한 일, 오늘 할 일, 블로커 공유',
           TO_TIMESTAMP('2025-08-05 09:30:00', 'YYYY-MM-DD HH24:MI:SS'),
           TO_TIMESTAMP('2025-08-05 09:45:00', 'YYYY-MM-DD HH24:MI:SS'),
           0, -- is_all_day = false
           'FREQ=DAILY;UNTIL=20250815T000000Z', -- 매일 반복, 2025년 8월 15일까지
           SYSTIMESTAMP,
           SYSTIMESTAMP
       );

-- 데이터가 올바르게 삽입되었는지 확인하는 SELECT 문
SELECT * FROM schedules ORDER BY start_time;

-- 변경사항을 데이터베이스에 최종 반영
COMMIT;