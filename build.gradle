plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.8'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.bj'
version = '0.0.1-SNAPSHOT'
description = 'ilji_server'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
/* --- Spring 기본 --- */
    implementation 'org.springframework.boot:spring-boot-starter-web'      // REST API
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA
    implementation 'org.springframework.boot:spring-boot-starter-security' // (권장) CORS/보호자원/필터 구성용

    /* --- Oracle JDBC + Wallet (버전 동일 유지) --- */
    implementation 'com.oracle.database.jdbc:ojdbc11:23.5.0.24.07'
    implementation 'com.oracle.database.security:oraclepki:23.5.0.24.07'   // Wallet 필수
    implementation 'com.oracle.ojdbc:osdt_core:19.3.0.0'
    implementation 'com.oracle.database.security:osdt_cert:21.10.0.0'

    /* --- Google ID Token 검증 (서버에서 구글 서명/aud/iss 검증) --- */
    implementation 'com.google.api-client:google-api-client:2.6.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.36.0'
    // GsonFactory 사용 시 위 두 개로 충분. Jackson 쓰고 싶으면 google-api-client-jackson2 대체 가능.

    /* --- (선택) 서버 자체 액세스 토큰 발급용 JWT --- */
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    /* --- 개발 편의/보일러플레이트 --- */
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    /* --- Test --- */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    /* --- iCalendar(RRULE) 파싱 --- 반복 주기 관리용 라이브러리 */
    implementation 'org.mnode.ical4j:ical4j:4.1.1'

    /*
   •	spring-boot-starter-security: CORS 허용, 인증 필터, 보호 자원 설정을 깔끔하게 하려면 있는 게 편함 (간단히 모두 permitAll로 시작해도 OK)
   •	Google 검증 라이브러리: 프론트에서 받은 id_token을 서버에서 aud/iss/exp 등 진짜 토큰인지 검증하려고 넣었습니다.
   •	JJWT: 우리 서비스용 액세스 토큰 발급(혹은 세션 대신 쿠키+토큰 전략)할 때 사용. 쿠키 세션만 쓸 거면 제거해도 됩니다.
   •	Oracle Wallet 세트: 버전을 모두 동일하게 유지하는 게 중요해요(지금처럼 23.5.0.24.07로 통일 )
    */
    implementation 'com.google.firebase:firebase-admin:9.2.0'

    //    중복 알림 방지
    implementation 'commons-codec:commons-codec'

    // 실시간 반영 웹 소켓
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // [옵션] WebSocket에 Spring Security 권한체크 쓸 때만
    implementation 'org.springframework.security:spring-security-messaging'


}


tasks.named('test') {
    useJUnitPlatform()
}
